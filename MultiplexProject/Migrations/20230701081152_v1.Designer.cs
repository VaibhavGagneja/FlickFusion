// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiplexProject.Models;

#nullable disable

namespace MultiplexProject.Migrations
{
    [DbContext(typeof(CodeFirstMultiplex))]
    [Migration("20230701081152_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MultiplexProject.Models.Feedback", b =>
                {
                    b.Property<int>("FeedBackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedBackId"), 1L, 1);

                    b.Property<string>("FeedBack")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("MobileNo")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedBackId");

                    b.HasIndex("MobileNo");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("MultiplexProject.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"), 1L, 1);

                    b.Property<string>("MovieDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MovieDuration")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MovieImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieLanguage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MovieType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MovieId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MultiplexProject.Models.Multiplex", b =>
                {
                    b.Property<int>("MultiplexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MultiplexId"), 1L, 1);

                    b.Property<string>("MultiplexName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MultiplexId");

                    b.ToTable("Multiplex");
                });

            modelBuilder.Entity("MultiplexProject.Models.Register", b =>
                {
                    b.Property<long>("MobileNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MobileNo");

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("MultiplexProject.Models.Screen", b =>
                {
                    b.Property<int>("ScreenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreenId"), 1L, 1);

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("MultiplexId")
                        .HasColumnType("int");

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("totalSeats")
                        .HasColumnType("int");

                    b.HasKey("ScreenId");

                    b.HasIndex("MovieId");

                    b.HasIndex("MultiplexId");

                    b.ToTable("Screen");
                });

            modelBuilder.Entity("MultiplexProject.Models.SeatMatrix", b =>
                {
                    b.Property<int>("MatrixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatrixId"), 1L, 1);

                    b.Property<int>("GoldSeats")
                        .HasColumnType("int");

                    b.Property<int>("MultiplexId")
                        .HasColumnType("int");

                    b.Property<string>("OccupiedSeatsGold")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupiedSeatsPremium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupiedSeatsSilver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PremiumSeats")
                        .HasColumnType("int");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.Property<int>("SilverSeats")
                        .HasColumnType("int");

                    b.HasKey("MatrixId");

                    b.HasIndex("MultiplexId");

                    b.ToTable("seatMatrices");
                });

            modelBuilder.Entity("MultiplexProject.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<long>("MobileNo")
                        .HasColumnType("bigint");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Movietiming")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TicketId");

                    b.HasIndex("MobileNo");

                    b.HasIndex("MovieId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("MultiplexProject.Models.Feedback", b =>
                {
                    b.HasOne("MultiplexProject.Models.Register", "Register")
                        .WithMany()
                        .HasForeignKey("MobileNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("MultiplexProject.Models.Screen", b =>
                {
                    b.HasOne("MultiplexProject.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiplexProject.Models.Multiplex", "Multiplex")
                        .WithMany()
                        .HasForeignKey("MultiplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Multiplex");
                });

            modelBuilder.Entity("MultiplexProject.Models.SeatMatrix", b =>
                {
                    b.HasOne("MultiplexProject.Models.Multiplex", "Multiplex")
                        .WithMany()
                        .HasForeignKey("MultiplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Multiplex");
                });

            modelBuilder.Entity("MultiplexProject.Models.Ticket", b =>
                {
                    b.HasOne("MultiplexProject.Models.Register", "Register")
                        .WithMany()
                        .HasForeignKey("MobileNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiplexProject.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Register");
                });
#pragma warning restore 612, 618
        }
    }
}
